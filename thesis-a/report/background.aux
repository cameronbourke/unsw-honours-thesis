\relax 
\citation{ManGprof}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Background}{3}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{ch:background}{{2}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Profiling}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}CPU Profiling}{3}\protected@file@percent }
\citation{ManGCC}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}Types of CPU Profilers}{4}\protected@file@percent }
\newlabel{sect:cpu_profiler_types}{{2.1.2}{4}}
\@writefile{toc}{\contentsline {subsubsection}{Instrumentation}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Statistical}{4}\protected@file@percent }
\newlabel{sect:statistical}{{2.1.2}{4}}
\citation{YouTubeDotnetosCPUProfling}
\citation{YouTubeDotnetosCPUProfling}
\citation{DocsGProfImpl}
\@writefile{toc}{\contentsline {subsubsection}{Event-based}{5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.3}Statistical Profiling Overview}{5}\protected@file@percent }
\newlabel{sect:statistical_profiling}{{2.1.3}{5}}
\@writefile{toc}{\contentsline {subsubsection}{Code Execution}{5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Sampling}{5}\protected@file@percent }
\citation{GlossArmISA}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces Sampling the CPU every 1ms. In this example, profiling begins at 0ms, where the first sample is recorded with thread A on the CPU executing method 1. The second sample occurs at 1ms, where there is no activity on the CPU. At 3ms, thread B is active and the call stack contains methods 2 and 3. The fourth sample at 3ms, records method 4 executing within the kernel. This example was adapted from the Dotnetos conference talk ``CPU profiling inside out" \cite  {YouTubeDotnetosCPUProfling}.\relax }}{6}\protected@file@percent }
\newlabel{fig:sel4_microkernel}{{2.1}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Performance Monitoring}{6}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Microarchitecture}{6}\protected@file@percent }
\citation{BlogRedHatCPU}
\citation{BlogRedHatCPU}
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces A simplified conceptual diagram of a typical CPU. The reality is much more complex than this, however a typical CPU will have: multiple layers of caching (L1, L2, etc), distinct L1 cache for instructions (L1i) and memory (L1d), a Memory Management Unit (MMU) to support virtual addressing, a control unit to coordinate the data-path and pipelining, and an Arithmetic Logic Unit (ALU) to execute arithmetic and logical instructions. Taken from a Red Hat blog post titled ``The central processing unit (CPU): Its components and functionality" \cite  {BlogRedHatCPU} \relax }}{7}\protected@file@percent }
\newlabel{fig:cpu_vis}{{2.2}{7}}
\citation{DocsArmv8PMU}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Performance Monitoring Unit (PMU)}{8}\protected@file@percent }
\newlabel{sect:pmu}{{2.2.2}{8}}
\@writefile{toc}{\contentsline {subsubsection}{Hardware Events}{8}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}Performance Counters}{8}\protected@file@percent }
\citation{DocsSeL4Hardware}
\citation{DocsArmCortexA15PMU}
\citation{DocsArmv7PMURegs}
\citation{TutHowToUsePMU}
\@writefile{toc}{\contentsline {subsubsection}{Fixed and Programmable Counters}{9}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.4}Counting vs Sampling}{9}\protected@file@percent }
\newlabel{sect:sampling_counting}{{2.2.4}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.5}Programming the PMU}{9}\protected@file@percent }
\newlabel{sect:programming_pmu}{{2.2.5}{9}}
\citation{DocsArvm7}
\citation{DocsArmMCR}
\citation{DocsGCCExtendedAsm}
\@writefile{toc}{\contentsline {subsubsection}{Cortex-A15}{10}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Initialising the PMU}{10}\protected@file@percent }
\@writefile{lol}{\contentsline {listing}{\numberline {1}{\ignorespaces Flags for PMU MSRs on ARMv7.\relax }}{11}\protected@file@percent }
\newlabel{lst:pmu_flags}{{1}{11}}
\@writefile{lol}{\contentsline {listing}{\numberline {2}{\ignorespaces Initialising the counters via the \texttt  {PMCR}.\relax }}{11}\protected@file@percent }
\newlabel{lst:pmu_pmcr}{{2}{11}}
\@writefile{lol}{\contentsline {listing}{\numberline {3}{\ignorespaces Enabling counter 0 and the CPU clock counter via the \texttt  {PMCNTENSET} register.\relax }}{11}\protected@file@percent }
\newlabel{lst:pmu_pmcntenset}{{3}{11}}
\citation{DocsArmMRC}
\@writefile{lol}{\contentsline {listing}{\numberline {4}{\ignorespaces Clearing the overflow bit (in case it was previously enabled) via the \texttt  {PMOVSR}.\relax }}{12}\protected@file@percent }
\newlabel{lst:pmu_pmovsr}{{4}{12}}
\@writefile{lol}{\contentsline {listing}{\numberline {5}{\ignorespaces Assigning the software increment event to counter 0 via \texttt  {PMSELR} and \texttt  {PMXEVTYPER}.\relax }}{12}\protected@file@percent }
\newlabel{lst:pmu_assign_ctr}{{5}{12}}
\@writefile{toc}{\contentsline {subsubsection}{Counting an event on the PMU}{12}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Reading an event count on the PMU}{12}\protected@file@percent }
\@writefile{lol}{\contentsline {listing}{\numberline {6}{\ignorespaces Reading the number of software increments in counter 0 via the PMXEVCNTR.\relax }}{12}\protected@file@percent }
\newlabel{lst:pmu_read_ctr}{{6}{12}}
\citation{DocsIntel64IA32Vol3B}
\citation{ArticleEmbeddedTwoPercSol}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Platform Support}{13}\protected@file@percent }
\newlabel{sect:platform_support}{{2.3}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}x86 Systems}{13}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.2}ARM Systems}{13}\protected@file@percent }
\citation{DocsArmArchProfiles}
\citation{DocsArmCortexR52PMUCtrs}
\citation{DocsArmCortexM55PMUCtrs}
\citation{BlogVentureBeat}
\citation{DocsRISVISAPerfCounters}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.3}RISC-V Systems}{14}\protected@file@percent }
\@setckpt{background}{
\setcounter{page}{15}
\setcounter{equation}{0}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{3}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{2}
\setcounter{section}{3}
\setcounter{subsection}{3}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{2}
\setcounter{table}{0}
\setcounter{FancyVerbLine}{3}
\setcounter{linenumber}{1}
\setcounter{LN@truepage}{20}
\setcounter{FV@TrueTabGroupLevel}{0}
\setcounter{FV@TrueTabCounter}{0}
\setcounter{FV@HighlightLinesStart}{0}
\setcounter{FV@HighlightLinesStop}{0}
\setcounter{FancyVerbLineBreakLast}{0}
\setcounter{float@type}{16}
\setcounter{minted@FancyVerbLineTemp}{2}
\setcounter{minted@pygmentizecounter}{6}
\setcounter{listing}{6}
\setcounter{lstnumber}{1}
\setcounter{caption@flags}{0}
\setcounter{continuedfloat}{0}
\setcounter{lstlisting}{0}
}
